
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL CLASS COLON COMMA DEF ELIF ELSE EQEQ EQUALS FLOAT GE GT IDENTIFIER IF INT LBRACE LBRACKET LE LPAREN LT NEQ RBRACE RBRACKET RETURN RPAREN STRING TYPE_BOOL TYPE_DICT TYPE_FLOAT TYPE_INT TYPE_LIST TYPE_SET TYPE_STRING TYPE_TUPLEstatements : statement\n| statements statementif_statement : IF expression COLON statements elif_else_blocklist_items : all_datatypes COMMA list_items\n| all_datatypes\n| emptyempty :elif_else_block : ELIF expression COLON statements elif_else_block\n| ELSE COLON statements\n| emptystatement : data_declaration\n| expression\n| if_statement\nkv_list_items : kv COMMA kv_list_items\n| kv\n| emptydata_declaration : IDENTIFIER EQUALS expressionexpression : IDENTIFIER\n| all_datatypes\n| comparison_expression\nkv : STRING  COLON all_datatypes\n| INT COLON all_datatypescomparison_expression : expression GT expression\n| expression LT expression\n| expression EQEQ expression\n| expression NEQ expression\n| expression GE expression\n| expression LE expressionlist : LBRACKET list_items RBRACKETtuple : LPAREN list_items RPARENset : LBRACE list_items RBRACEdict : LBRACE kv_list_items RBRACEbasic_datatype : INT\n| FLOAT\n| STRING\n| BOOLall_datatypes : collection\n| basic_datatype\ncollection : list\n| tuple\n| dict\n| settypehint_type : COLON TYPE_INT\n| TYPE_FLOAT\n| TYPE_STRING\n| TYPE_BOOL\n| TYPE_LIST\n| TYPE_TUPLE\n| TYPE_DICT\n| TYPE_SETtypehint : COLON typehint_type\n| empty'
    
_lr_action_items = {'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,23,24,25,26,27,28,29,30,32,43,44,45,46,47,48,49,50,51,53,54,55,59,67,68,70,72,73,74,75,76,],[6,6,-1,-11,-12,-13,-18,-19,-20,32,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,-2,32,32,32,32,32,32,32,-18,-23,-24,-25,-26,-27,-28,-17,6,-29,-30,-32,-31,6,-3,32,-10,6,6,6,6,-8,]),'IF':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,23,32,43,44,45,46,47,48,49,50,51,53,54,55,59,67,70,72,73,74,75,76,],[9,9,-1,-11,-12,-13,-18,-19,-20,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,-2,-18,-23,-24,-25,-26,-27,-28,-17,9,-29,-30,-32,-31,9,-3,-10,9,9,9,9,-8,]),'INT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,67,68,70,72,73,74,75,76,],[16,16,-1,-11,-12,-13,-18,-19,-20,16,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,16,16,42,-2,16,16,16,16,16,16,16,-18,-23,-24,-25,-26,-27,-28,-17,16,-29,16,-30,-32,-31,64,16,16,16,-3,16,-10,16,16,16,16,-8,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,67,68,70,72,73,74,75,76,],[17,17,-1,-11,-12,-13,-18,-19,-20,17,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,17,17,17,-2,17,17,17,17,17,17,17,-18,-23,-24,-25,-26,-27,-28,-17,17,-29,17,-30,-32,-31,17,17,17,-3,17,-10,17,17,17,17,-8,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,67,68,70,72,73,74,75,76,],[18,18,-1,-11,-12,-13,-18,-19,-20,18,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,18,18,41,-2,18,18,18,18,18,18,18,-18,-23,-24,-25,-26,-27,-28,-17,18,-29,18,-30,-32,-31,63,18,18,18,-3,18,-10,18,18,18,18,-8,]),'BOOL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,67,68,70,72,73,74,75,76,],[19,19,-1,-11,-12,-13,-18,-19,-20,19,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,19,19,19,-2,19,19,19,19,19,19,19,-18,-23,-24,-25,-26,-27,-28,-17,19,-29,19,-30,-32,-31,19,19,19,-3,19,-10,19,19,19,19,-8,]),'LBRACKET':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,67,68,70,72,73,74,75,76,],[20,20,-1,-11,-12,-13,-18,-19,-20,20,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,20,20,20,-2,20,20,20,20,20,20,20,-18,-23,-24,-25,-26,-27,-28,-17,20,-29,20,-30,-32,-31,20,20,20,-3,20,-10,20,20,20,20,-8,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,67,68,70,72,73,74,75,76,],[21,21,-1,-11,-12,-13,-18,-19,-20,21,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,21,21,21,-2,21,21,21,21,21,21,21,-18,-23,-24,-25,-26,-27,-28,-17,21,-29,21,-30,-32,-31,21,21,21,-3,21,-10,21,21,21,21,-8,]),'LBRACE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,67,68,70,72,73,74,75,76,],[22,22,-1,-11,-12,-13,-18,-19,-20,22,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,22,22,22,-2,22,22,22,22,22,22,22,-18,-23,-24,-25,-26,-27,-28,-17,22,-29,22,-30,-32,-31,22,22,22,-3,22,-10,22,22,22,22,-8,]),'$end':([1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,23,32,43,44,45,46,47,48,49,51,53,54,55,59,67,70,74,75,76,],[0,-1,-11,-12,-13,-18,-19,-20,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,-2,-18,-23,-24,-25,-26,-27,-28,-17,-29,-30,-32,-31,-7,-3,-10,-9,-7,-8,]),'ELIF':([2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,23,32,43,44,45,46,47,48,49,51,53,54,55,59,67,70,74,75,76,],[-1,-11,-12,-13,-18,-19,-20,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,-2,-18,-23,-24,-25,-26,-27,-28,-17,-29,-30,-32,-31,68,-3,-10,-9,68,-8,]),'ELSE':([2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,23,32,43,44,45,46,47,48,49,51,53,54,55,59,67,70,74,75,76,],[-1,-11,-12,-13,-18,-19,-20,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,-2,-18,-23,-24,-25,-26,-27,-28,-17,-29,-30,-32,-31,69,-3,-10,-9,69,-8,]),'GT':([4,6,7,8,10,11,12,13,14,15,16,17,18,19,31,32,43,44,45,46,47,48,49,51,53,54,55,71,],[24,-18,-19,-20,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,24,-18,24,24,24,24,24,24,24,-29,-30,-32,-31,24,]),'LT':([4,6,7,8,10,11,12,13,14,15,16,17,18,19,31,32,43,44,45,46,47,48,49,51,53,54,55,71,],[25,-18,-19,-20,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,25,-18,25,25,25,25,25,25,25,-29,-30,-32,-31,25,]),'EQEQ':([4,6,7,8,10,11,12,13,14,15,16,17,18,19,31,32,43,44,45,46,47,48,49,51,53,54,55,71,],[26,-18,-19,-20,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,26,-18,26,26,26,26,26,26,26,-29,-30,-32,-31,26,]),'NEQ':([4,6,7,8,10,11,12,13,14,15,16,17,18,19,31,32,43,44,45,46,47,48,49,51,53,54,55,71,],[27,-18,-19,-20,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,27,-18,27,27,27,27,27,27,27,-29,-30,-32,-31,27,]),'GE':([4,6,7,8,10,11,12,13,14,15,16,17,18,19,31,32,43,44,45,46,47,48,49,51,53,54,55,71,],[28,-18,-19,-20,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,28,-18,28,28,28,28,28,28,28,-29,-30,-32,-31,28,]),'LE':([4,6,7,8,10,11,12,13,14,15,16,17,18,19,31,32,43,44,45,46,47,48,49,51,53,54,55,71,],[29,-18,-19,-20,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,29,-18,29,29,29,29,29,29,29,-29,-30,-32,-31,29,]),'EQUALS':([6,],[30,]),'COLON':([7,8,10,11,12,13,14,15,16,17,18,19,31,32,41,42,43,44,45,46,47,48,51,53,54,55,63,64,69,71,],[-19,-20,-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,50,-18,57,58,-23,-24,-25,-26,-27,-28,-29,-30,-32,-31,57,58,72,73,]),'COMMA':([10,11,12,13,14,15,16,17,18,19,34,39,41,42,51,53,54,55,65,66,],[-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,52,56,-35,-33,-29,-30,-32,-31,-21,-22,]),'RBRACKET':([10,11,12,13,14,15,16,17,18,19,20,33,34,35,51,52,53,54,55,60,],[-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,-7,51,-5,-6,-29,-7,-30,-32,-31,-4,]),'RPAREN':([10,11,12,13,14,15,16,17,18,19,21,34,35,36,51,52,53,54,55,60,],[-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,-7,-5,-6,53,-29,-7,-30,-32,-31,-4,]),'RBRACE':([10,11,12,13,14,15,16,17,18,19,22,34,35,37,38,39,40,41,42,51,52,53,54,55,56,60,61,62,65,66,],[-37,-38,-39,-40,-41,-42,-33,-34,-35,-36,-7,-5,-6,54,55,-15,-6,-35,-33,-29,-7,-30,-32,-31,-7,-4,-14,-16,-21,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,50,72,73,],[1,59,74,75,]),'statement':([0,1,50,59,72,73,74,75,],[2,23,2,23,2,2,23,23,]),'data_declaration':([0,1,50,59,72,73,74,75,],[3,3,3,3,3,3,3,3,]),'expression':([0,1,9,24,25,26,27,28,29,30,50,59,68,72,73,74,75,],[4,4,31,43,44,45,46,47,48,49,4,4,71,4,4,4,4,]),'if_statement':([0,1,50,59,72,73,74,75,],[5,5,5,5,5,5,5,5,]),'all_datatypes':([0,1,9,20,21,22,24,25,26,27,28,29,30,50,52,57,58,59,68,72,73,74,75,],[7,7,7,34,34,34,7,7,7,7,7,7,7,7,34,65,66,7,7,7,7,7,7,]),'comparison_expression':([0,1,9,24,25,26,27,28,29,30,50,59,68,72,73,74,75,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'collection':([0,1,9,20,21,22,24,25,26,27,28,29,30,50,52,57,58,59,68,72,73,74,75,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'basic_datatype':([0,1,9,20,21,22,24,25,26,27,28,29,30,50,52,57,58,59,68,72,73,74,75,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'list':([0,1,9,20,21,22,24,25,26,27,28,29,30,50,52,57,58,59,68,72,73,74,75,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'tuple':([0,1,9,20,21,22,24,25,26,27,28,29,30,50,52,57,58,59,68,72,73,74,75,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'dict':([0,1,9,20,21,22,24,25,26,27,28,29,30,50,52,57,58,59,68,72,73,74,75,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'set':([0,1,9,20,21,22,24,25,26,27,28,29,30,50,52,57,58,59,68,72,73,74,75,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'list_items':([20,21,22,52,],[33,36,38,60,]),'empty':([20,21,22,52,56,59,75,],[35,35,40,35,62,70,70,]),'kv_list_items':([22,56,],[37,61,]),'kv':([22,56,],[39,39,]),'elif_else_block':([59,75,],[67,76,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement','statements',1,'p_statements','root.py',2),
  ('statements -> statements statement','statements',2,'p_statements','root.py',3),
  ('if_statement -> IF expression COLON statements elif_else_block','if_statement',5,'p_if_statement','selection.py',2),
  ('list_items -> all_datatypes COMMA list_items','list_items',3,'p_list_items','types.py',5),
  ('list_items -> all_datatypes','list_items',1,'p_list_items','types.py',6),
  ('list_items -> empty','list_items',1,'p_list_items','types.py',7),
  ('empty -> <empty>','empty',0,'p_empty','util.py',5),
  ('elif_else_block -> ELIF expression COLON statements elif_else_block','elif_else_block',5,'p_elif_else_block','selection.py',9),
  ('elif_else_block -> ELSE COLON statements','elif_else_block',3,'p_elif_else_block','selection.py',10),
  ('elif_else_block -> empty','elif_else_block',1,'p_elif_else_block','selection.py',11),
  ('statement -> data_declaration','statement',1,'p_statement','root.py',11),
  ('statement -> expression','statement',1,'p_statement','root.py',12),
  ('statement -> if_statement','statement',1,'p_statement','root.py',13),
  ('kv_list_items -> kv COMMA kv_list_items','kv_list_items',3,'p_kv_list_items','types.py',17),
  ('kv_list_items -> kv','kv_list_items',1,'p_kv_list_items','types.py',18),
  ('kv_list_items -> empty','kv_list_items',1,'p_kv_list_items','types.py',19),
  ('data_declaration -> IDENTIFIER EQUALS expression','data_declaration',3,'p_data_declaration','root.py',22),
  ('expression -> IDENTIFIER','expression',1,'p_expression','root.py',27),
  ('expression -> all_datatypes','expression',1,'p_expression','root.py',28),
  ('expression -> comparison_expression','expression',1,'p_expression','root.py',29),
  ('kv -> STRING COLON all_datatypes','kv',3,'p_kv','types.py',29),
  ('kv -> INT COLON all_datatypes','kv',3,'p_kv','types.py',30),
  ('comparison_expression -> expression GT expression','comparison_expression',3,'p_comparison_expression','root.py',35),
  ('comparison_expression -> expression LT expression','comparison_expression',3,'p_comparison_expression','root.py',36),
  ('comparison_expression -> expression EQEQ expression','comparison_expression',3,'p_comparison_expression','root.py',37),
  ('comparison_expression -> expression NEQ expression','comparison_expression',3,'p_comparison_expression','root.py',38),
  ('comparison_expression -> expression GE expression','comparison_expression',3,'p_comparison_expression','root.py',39),
  ('comparison_expression -> expression LE expression','comparison_expression',3,'p_comparison_expression','root.py',40),
  ('list -> LBRACKET list_items RBRACKET','list',3,'p_list','types.py',39),
  ('tuple -> LPAREN list_items RPAREN','tuple',3,'p_tuple','types.py',45),
  ('set -> LBRACE list_items RBRACE','set',3,'p_set','types.py',51),
  ('dict -> LBRACE kv_list_items RBRACE','dict',3,'p_dict','types.py',57),
  ('basic_datatype -> INT','basic_datatype',1,'p_basic_datatype','types.py',62),
  ('basic_datatype -> FLOAT','basic_datatype',1,'p_basic_datatype','types.py',63),
  ('basic_datatype -> STRING','basic_datatype',1,'p_basic_datatype','types.py',64),
  ('basic_datatype -> BOOL','basic_datatype',1,'p_basic_datatype','types.py',65),
  ('all_datatypes -> collection','all_datatypes',1,'p_all_datatypes','types.py',70),
  ('all_datatypes -> basic_datatype','all_datatypes',1,'p_all_datatypes','types.py',71),
  ('collection -> list','collection',1,'p_collection','types.py',80),
  ('collection -> tuple','collection',1,'p_collection','types.py',81),
  ('collection -> dict','collection',1,'p_collection','types.py',82),
  ('collection -> set','collection',1,'p_collection','types.py',83),
  ('typehint_type -> COLON TYPE_INT','typehint_type',2,'p_typehint_type','types.py',91),
  ('typehint_type -> TYPE_FLOAT','typehint_type',1,'p_typehint_type','types.py',92),
  ('typehint_type -> TYPE_STRING','typehint_type',1,'p_typehint_type','types.py',93),
  ('typehint_type -> TYPE_BOOL','typehint_type',1,'p_typehint_type','types.py',94),
  ('typehint_type -> TYPE_LIST','typehint_type',1,'p_typehint_type','types.py',95),
  ('typehint_type -> TYPE_TUPLE','typehint_type',1,'p_typehint_type','types.py',96),
  ('typehint_type -> TYPE_DICT','typehint_type',1,'p_typehint_type','types.py',97),
  ('typehint_type -> TYPE_SET','typehint_type',1,'p_typehint_type','types.py',98),
  ('typehint -> COLON typehint_type','typehint',2,'p_typehint','types.py',103),
  ('typehint -> empty','typehint',1,'p_typehint','types.py',104),
]
